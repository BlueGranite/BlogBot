======== SAMPLE 1 ========
() and try a few different approaches. There are a variety of options to visualize data, most notably the histogram and bar graph. In a demos session for BlueGranite covering 2010 and present we assisted the CEO and client to construct a calculated bar chart in Power BI Markdown format without renaming the data source.   Bar Chart For this example, we used a spreadsheet that we had on continuous budget, but that did not have an on-boarding chart. Because of the size of the data area, we were reluctant to use a single column as the data was quite large; however, we were then nervous that the resulting data might not be all inclusive. We estimated the expected size of the data in megabytes and used that to calculate the expected age at first reading. The age of the smallest bubble in our sample is B11, so the age here is 1 year old and the average age is 17.3. The bar chart here is a little different. It starts at 17.3 years and will grow to a maximum age of 18.4 by narrowing rectangles (Picture 1). The goal is to have as large of a sample as possible The chart breaks down individual data into three parts:  The sample It measures When the data is written The data is filtered The data is consumed When the data is filtered, the data is grouped Retain the data in the cloud and have it saved to a relational database When the data is consumed, the data is grouped together Finally, when the data is consumed, copy the data to a PowerBI model and have it saved to a memory table (Model) in Azure.     The code for the model in the PowerBI demo page (Picture 2) shows the inner functions as shown in the image above.     (Visibility))source(R, '@vis', {          x: x.asset[0].assetName       }, Markup (Markdown, MarkdownCatalog)      }, 5)  After you copy your model and model the data using the Edit Function, you should notice in the Environment variable within the function that I used MarkdownCatalog as a reference. MarkdownCatalog hooks up the underlying model from PowerBI. The API is implemented as a bookmarklet in PowerBI. Your code should look something like the following: (try returning 500 for PowerBI demo page) (defstructing  list  data’s contents            @queried } ) In this example, we showed how to copy data from PowerBI database to PowerBI model. PowerBI does not support direct querying of stored data. Instead, PowerBI offers back-end capabilities such as: Component support PowerBI.com components provide different storage APIs for the database engine (SQL Server), PowerBI.com, and Microsoft.vs. SQL Server.com uses a distinct row-by-row caching architecture. Additionally, PowerBI.com does not support dynamic data refreshes. Instead, the data refreshes are performed inside PowerBI.com –specifically, the PowerBI service is returning a new data level in a query. The table referenced in the PowerBI model acts as a cache for the underlying data, which in this example uses Azure SQL Database. PowerBI also supports retrieval via a data-based PRIMARY KEY_SIZE column (defining a table to retrieve data from). (You may also encounter problems if your model doesn't support row-by-row querying.)  (defstructing  list  data’s contents            @queried } ) Data at the Table (DMTP) When you write data at the table, you would do so using a DAX measure as an expression. A measure inside a DAX expression works as a delimiter – it begins with a negative number, and it is used as an index inside the table. For this example, we will take the name of the table and use it as our search index. We will need to determine the minimum and maximum values in order to find the query that returned the data, as well as a measure that identifies the row in our table: (DMTP)] (add_query  record_id = pair( record_id = \"record_id\"), record_type = \"type\", query dataset = table, output_data_type = output]) As you can see, during our initial code execution, we defined two measure expressions. The DAX expression, for instance, defines a minimum value of 0. The measure, that='T' – defines which row in our record we will search. For this measure, we can easily determine that 1 is
