======== SAMPLE 1 ========
 I get in the field to do a big data analysis and the data still hasn’t translated into code, so we just keep wrangling more and more data from the stack, keeping some sort of log, so to speak.  It’s an ever-scenario-ending grind though: how do we make sure we get our jobs done without making any code to interact with them?  Sometimes the answer is always no code at all, sometimes code can’t be evaluated in production because, as it usually only has evaluation for a limited set of circumstances, it usually doesn’t do any of those actions for the whole world to see.  The solution I’m working on is based on using predicate operations in SQL Server Analysis Services Mode (SSAS) to add a level of monitoring and performance indicators to the tables in an enterprise-wide data warehouse.  There are two ways to get started with this work: via a graphical user interface or using a service.  The Service Example This is the part where you’ve already started to struggle with your logging and data movement, but what if you could just put a button down at the root of the table and log activity like we see in the automated SSAS dashboard? Maybe you could set up a simple SQL Server Analysis Services Mode Service so that on-premises SSAS can take on the log and data transactions and send them over firewall or VPNs to the cloud? Nope, not only doesn’t that solve a few technical issues (specifically, logging and data movement) but it’s just another way to view your data.  In fact, it’s pretty complicated: it’s entirely dependent on your day-to-day activities like running your household or cleaning your car.  Who among us doesn’t enjoy SSAS 2017 having a little console in the dashboard to keep everything going, logging and running?  At BlueGranite we regularly connect to the data from our SSAS 2016 server to gauge if anyone was monitoring there or using that data to gain insights.  As discussed in the previous article, in general, SSAS 2017 does a fantastic job of logging and loading data, but there are some very specific activities we want to do that we’ll want to add to the SSAS database and execute certain SQL operations on.  For example, are some of these activities simple AND long-running and static OR statements that don’t need defining parameters? There are lots of options here, but the obvious place to start would be to use a dynamic type system to limit the amount of static queries you do on your entities.  SSAS 2017 doesn this type with Entity system entries, thus there’s a trade-off between type and performance between now and then.  In summary, the security of SSAS 2017 requires that you don’t just throw away your current solution but also require that your existing users never have access to that functionality again.  This can often be as heavy lifting solved with a static entity system as it can being solved with dynamic ones. The DAX here is that we only need to answer to the question \"Is there anything I would like to add to the database today’s users can do?", although I can’t claim to be an expert in all things DAX, but I do have some suggestions.The table below could be expanded to include more options for adding more people to the Hadoop cluster.  This would not only make it more powerful and easier for users to perform SQL on, but it also would reduce the need for complex fields to be fulfilled manually.  Another option would be to make the table so that the columns always start with an index, since that already’s a requirement.  Another possible use would be to make these simple statements much more complex and leave the possibility of manually calculating parameters loose.  In the meantime, here’s a sample blog post to illustrate some of the possibilities.     Perhaps the most interesting option would be to make simple expressions that specify thresholds and/or maximums for the aggregation and shuffling.  Currently there are thresholds for “Added ” groups of records at a specific position in the data column, and “Disconnected ” rows removed from the data column.  These simple queries would allow the querying of individual records at a specific location in the data column.  This could drastically reduce the need for complex DAX statements and reports.  A third option would be to make the expressions more concise and easy to understand, since there would be no reason to put complicated definitions around definitions surrounding DAX.Adding more people to a Hadoop cluster requires more capital than ever before from private sector private sector partners.  There are companies that could provide the exact same solution, but put the burden solely on the newly committed partner.Companies that have invested in SSAS before could benefit from this change as they might now be using a more traditional
